openapi: "3.0.0"
info:
  title: "JSONATA Helper"
  description: "This document describes the API for JSONATA-Rest helper transformations"
  version: "1.0.0"
  contact:
    email: "eip@cdc.gov"
 
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

servers:
  - url: https://localhost/jsonata/v1
    description: Development server
  - url: https://qaserver.com/jsonata/v1
    description: QA server
  
tags:
- name: JSONATA
  description: JSONAta Transformations

paths:
  /trasform/{specName}:
    post:
      tags: 
      - JSONATA
      description: Validates if the parameters provided belong to a Catchment area.
      parameters:
      - $ref: '#/components/parameters/specName'
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref:  '#/components/schemas/jsonPayload'
      responses:
        200:
          $ref: '#/components/schemas/jsonPayload'
        404:
          description: If specName has not been registered before.

  /spec/{specName}:
    post:
      description: Create/Register new JSONATA Spec to be used.
      requestBody:
        required: true
        description: the JSON with transformation specification for JSONATA.
        content:
          application/json:
            schema:
              $ref:  '#/components/schemas/jsonPayload'
      
      responses:
        200:
          $ref: '#/components/schemas/messageReceipt'
    parameters:
      - $ref: '#/components/parameters/specName'
        
    get:
      description: retrieves the specification name provided
      responses:
        200:
          $ref: '#/components/schemas/jsonPayload'
    put:
      description: updates the given config 
      requestBody:
        required: true
        description: the JSON with transformation spec for JSONATA.
        content:
          application/json:
            schema:
              $ref:  '#/components/schemas/jsonPayload'   
      responses:
        200:
          $ref: '#/components/schemas/messageReceipt'     
         
    delete:
      description: removes the given spec.
      responses:
        200:
          $ref: '#/components/schemas/messageReceipt'     
      
components:
  schemas:
    jsonPayload:
      type: string
      
    messageReceipt:
      type: object
      properties:
        message:
          type: string
          example: Configuration successfully registered.
        
      
    Error:
      type: object
      properties:
        timestamp:
          type: string
          format: ISO-8601 UTC based
          example: "2017-09-14T12:44:35.200Z"
        code:
          type: string
          description: Service specific categorization of errors.
          example: 'RESOURCE_NOT_FOUND'
        description:
          type: string
          description: User friendly message about the error.
          example: "The number provided is invalid."
        status:
          type: integer
          description: HTTP status code returned to user. Must match HTTP Status on header.
          example: 400
        path:
          type: string
          description: The Full URL that was called that generated this error.
          format: URL
          example: 'http://localhost/bluebox/v1/messages'
        exception:
          type: string
          description: The exception, if any, associated with this error.
          example: 'java.lang.NullPointerException'
      required:
        - timestamp
        - code
        - description
        - status
        - path

   
  parameters:
    specName:
      name: specName
      in: path
      required: true
      schema:
        type: string
      description: name of the specification to use to transform the body payload.
        
    pageSize:
      in: query
      name: page_size
      description: Number of records to be retrieved.
      schema:
        type: integer
        default: 100
    pageNumber:
      in: query
      name: page_number
      description: The Page number to be retrieved. Fist page should be 1.
      schema:
        type: integer
        default: 1
   
        
  responses:
    
    messageReceipt:
      description: Receipt that configuration was successfully created/Updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messageReceipt'
    NotFound:
      description: Entity not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
           
    IllegalInput:
      description: Illegal input for operation. 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
   
            
    BadRequest:
      description: "Any error that is caused by the user - bad data sent, bad parameters, business rules violated, etc."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
           
    ServerError:
      description: "Any server side error that can occur."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
 